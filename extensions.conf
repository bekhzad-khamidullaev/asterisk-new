[tash-in]
exten => _X.,1,Answer(500)
; exten => _X.,n,GotoIfTime(18:00-23:59|*|31|12?newyear,s,1)
; exten => _X.,n,GotoIfTime(00:00-14:30|*|01|01?newyear,s,1)
same => n,GoSub(all-in,_X.,1(${EXTEN}))
same => n,GotoIfTime(${WORKTIME},*,*,*?queue01,s,1)
same => n,GoSub(go-sleep,_X.,1(${EXTEN}))

[sam-in]
exten => _X.,1,Answer(500)
; exten => _X.,n,GotoIfTime(18:00-23:59|*|31|12?newyear,s,1)
; exten => _X.,n,GotoIfTime(00:00-14:30|*|01|01?newyear,s,1)
same => n,GoSub(all-in,_X.,1(${EXTEN}))
same => n,GotoIfTime(${WORKTIME},*,*,*?queue01,s,1)
same => n,GoSub(go-sleep,_X.,1(${EXTEN}))

[5555-in]
exten => _XXXXXXXXX,1,Answer(500)
; exten => _X.,n,GotoIfTime(18:00-23:59|*|31|12?newyear,s,1)
; exten => _X.,n,GotoIfTime(00:00-14:30|*|01|01?newyear,s,1)
exten => _XXXXXXXXX,n,GoSub(all-in,_X.,1(${EXTEN}))
exten => _XXXXXXXXX,n,Background(ru/welcome)
exten => _XXXXXXXXX,n,Playback(ru/welcome4)
exten => _XXXXXXXXX,n,Playback(ru/welcome3)
exten => _XXXXXXXXX,n,WaitExten(7)

exten => 2,1,GotoIfTime(${WORKTIME},*,*,*?queue03,s,1)

exten => 1,1,GotoIfTime(${WORKTIME},*,*,*?queue01,s,1)

exten => black,1,Hangup()

exten => night,1,Playback(ru/night_ru)
exten => s,n,Playback(ru/night_uz)
exten => s,n,Hangup()

exten => t,1,GotoIfTime(${WORKTIME},*,*,*?queue01,s,1)
exten => i,1,GotoIfTime(${WORKTIME},*,*,*?queue01,s,1)

[all-in]
exten => _X.,1,GotoIf($[${BLACKLIST()}]?black,1)
same => n,GoSub(sub-monitor,s,1(${EXTEN}))
same => n,Set(CALLERID(name)=${CITY} ${CALLERID(name)})
same => n,Set(__CITYGLOB=${CITY})
same => n,Set(__CALLERIDGLOB=${CALLERID(num)})
same => n,Set(__WORKTIME=${WORK})
same => n,Set(__DIRECTION=INBOUND)
same => n,return

[newyear]
exten => s,1,NoOp(Handling New Year's Eve/New Year's Day call)
    same => n,Playback(/var/lib/asterisk/sounds/uzny1)
    same => n,Playback(/var/lib/asterisk/sounds/runy1)
    same => n,Hangup()

[go-sleep]
exten => _X.,1,Playback(/var/lib/asterisk/sounds/uz1)
same => n,Playback(/var/lib/asterisk/sounds/ru1)
same => n,Hangup()


[night]
exten => _X.,1,Playback(ru/night_ru)
exten => _X.,n,Playback(ru/night_uz)
exten => _X.,n,Hangup()

[local-out]
exten => _XXXX,1,GoSub(sub-monitor,s,1(${EXTEN}))
exten => _XXXX,2,Dial(PJSIP/${EXTEN})
exten => _XXXXXXXXX,1,GoSub(sub-monitor,s,1(${EXTEN}))
exten => _XXXXXXXXX,2,Dial(PJSIP/${EXTEN}@712031212,,R)
same => n,Set(__DIRECTION=INBOUND)





exten => *300,1,PauseQueueMember(queue_01,PJSIP/${CALLERID(num)})
same => n,Playback(beep)
same => n,Hangup

exten => *301,1,UnpauseQueueMember(queue_01,PJSIP/${CALLERID(num)})
same => n,AddQueueMember(queue_01,PJSIP/${CALLERID(num)})
same => n,Playback(beeperr)
same => n,Hangup

exten => *302,1,AddQueueMember(queue_01,PJSIP/${CALLERID(num)})
same => n,Playback(beep)
same => n,Hangup

exten => *303,1,RemoveQueueMember(queue_01,PJSIP/${CALLERID(num)})
same => n,Playback(beeperr)
same => n,Hangup

exten => *402,1,AddQueueMember(queue_02,PJSIP/${CALLERID(num)})
same => n,Playback(beep)
same => n,Hangup

exten => *403,1,RemoveQueueMember(queue_02,PJSIP/${CALLERID(num)})
same => n,Playback(beeperr)
same => n,Hangup


[ADD_HEADER]
exten => s,1,Set(PJSIP_HEADER(add,X-Linkedid)=${CDR(linkedid)})
exten => s,n,Set(PJSIP_HEADER(add,X-UserId)=${UserId})
exten => s,n,Set(PJSIP_HEADER(add,X-City)=${CITYGLOB})
exten => s,n,Return()

[survey]
exten => s,1,Background(uzocenite&ruocenite)
same => n,WaitExten(5)
; same => n,Set(DATETIME=${STRFTIME(${EPOCH},,%d%m%Y-%H:%M:%S)})
same => n,Hangup

exten => 1,1,Set(CDR(opinion)=1)
; exten => 1,n,Set(CDR(userfield)=${MEMBER})
; exten => 1,n,Set(DATETIME=${STRFTIME(${EPOCH},,%d%m%Y-%H:%M:%S)})
exten => 1,n,System(/var/lib/asterisk/agi-bin/venv/bin/python3 /var/lib/asterisk/agi-bin/survey.py ${DATETIME} ${CDR(src)} ${MEMBER} ${CDR(opinion)} ${UNIQUEID} ${CALLFILE}.mp3)
exten => 1,n,Hangup()

exten => 2,1,Set(CDR(opinion)=2)
; exten => 2,n,Set(CDR(userfield)=${MEMBER})
; exten => 2,n,Set(DATETIME=${STRFTIME(${EPOCH},,%d%m%Y-%H:%M:%S)})
exten => 2,n,System(/var/lib/asterisk/agi-bin/venv/bin/python3 /var/lib/asterisk/agi-bin/survey.py ${DATETIME} ${CDR(src)} ${MEMBER} ${CDR(opinion)} ${UNIQUEID} ${CALLFILE}.mp3)
exten => 2,n,Hangup()

exten => 3,1,Set(CDR(opinion)=3)
; exten => 3,n,Set(CDR(userfield)=${MEMBER})
; exten => 3,n,Set(DATETIME=${STRFTIME(${EPOCH},,%d%m%Y-%H:%M:%S)})
exten => 3,n,System(/var/lib/asterisk/agi-bin/venv/bin/python3 /var/lib/asterisk/agi-bin/survey.py ${DATETIME} ${CDR(src)} ${MEMBER} ${CDR(opinion)} ${UNIQUEID} ${CALLFILE}.mp3)
exten => 3,n,Hangup()

exten => 4,1,Set(CDR(opinion)=4)
; exten => 4,n,Set(CDR(userfield)=${MEMBER})
; exten => 4,n,Set(DATETIME=${STRFTIME(${EPOCH},,%d%m%Y-%H:%M:%S)})
exten => 4,n,System(/var/lib/asterisk/agi-bin/venv/bin/python3 /var/lib/asterisk/agi-bin/survey.py ${DATETIME} ${CDR(src)} ${MEMBER} ${CDR(opinion)} ${UNIQUEID} ${CALLFILE}.mp3)
exten => 4,n,Hangup()

exten => 5,1,Set(CDR(opinion)=5)
; exten => 5,n,Set(CDR(userfield)=${MEMBER})
; exten => 5,n,Set(DATETIME=${STRFTIME(${EPOCH},,%d%m%Y-%H:%M:%S)})
exten => 5,n,System(/var/lib/asterisk/agi-bin/venv/bin/python3 /var/lib/asterisk/agi-bin/survey.py ${DATETIME} ${CDR(src)} ${MEMBER} ${CDR(opinion)} ${UNIQUEID} ${CALLFILE}.mp3)
exten => 5,n,Hangup()

exten => h,1,NoOp(h context in survey)


[agent-answer-context]
exten => s,1,NoOp(Agent answered the call)
exten => s,n,Set(UserId=${SIP_HEADER(UserId)})
exten => s,n,Goto(ADD_HEADER)

same => n,Set(MESSAGE_DATA=${MESSAGE(UserId)})
same => n,NoOp(Received WebSocket data: ${MESSAGE_DATA})
same => n,Set(UserId=${CUT(UserId,|,1)})
same => n,NoOp(Extracted data: ${UserId})


[queue01]
exten => s,1,Set(QUEUE_PRIO=${PRIO})
same => n,Queue(queue_01,Rbc(ADD_HEADER^s^1))
same => n,Set(__MEMBER=${MEMBERNAME:-4})
same => n,NoOP(${UserId})
same => n,Set(__queuename=queue_01)
same => n,Goto(survey,s,1)
exten => h,1,NoOp(h context in queue_01)
exten => h,n,Hangup()

[queue_02]
exten => s,1,Set(QUEUE_PRIO=${PRIO})
same => n,Queue(queue_02,Rbc(ADD_HEADER^s^1))
same => n,Set(__MEMBER=${MEMBERNAME:-4})
same => n,NoOP(${UserId})
same => n,Set(__queuename=queue_02)
same => n,Goto(survey,s,1)
exten => h,1,NoOp(h context in queue_02)
exten => h,n,Hangup()


[queue03]
exten => s,1,Set(QUEUE_PRIO=${PRIO})
same => n,Queue(queue_03,Rbc(ADD_HEADER^s^1))
same => n,Set(__MEMBER=${MEMBERNAME:-4})
same => n,Set(__queuename=queue_03)
same => n,GoSub(survey,s,1)
same => n,hangup()

exten => h,1,NoOp(h context in queue_03)
exten => h,n,Hangup()

[queue05]
exten => _X.,1,Set(QUEUE_PRIO=${PRIO})
; exten => _X.,n,Set(DATETIME=${STRFTIME(${EPOCH},,%d%m%Y-%H:%M:%S)})
exten => _X.,n,Queue(queue_05,Rb(ADD_HEADER^s^1))

exten => _[a-zA-Z],1,Set(QUEUE_PRIO=${PRIO})
same => n,Queue(queue_05,Rbc(ADD_HEADER^s^1))
same => n,Set(queuename=queue_05)
same => n,Set(__MEMBER=${MEMBERNAME:-4})
same => n,Background(uzocenite&ruocenite)


exten => 1,1,Set(CDR(opinion)=1)
; exten => 1,n,Set(CDR(userfield)=${MEMBER})
; exten => 1,n,Set(DATETIME=${STRFTIME(${EPOCH},,%d%m%Y-%H:%M:%S)})
exten => 1,n,System(/var/lib/asterisk/agi-bin/venv/bin/python3 /var/lib/asterisk/agi-bin/survey.py ${DATETIME} ${CDR(src)} ${MEMBER} ${CDR(opinion)} ${UNIQUEID} ${CALLFILE}.mp3)
exten => 1,n,Hangup()

exten => 2,1,Set(CDR(opinion)=2)
; exten => 2,n,Set(CDR(userfield)=${MEMBER})
; exten => 2,n,Set(DATETIME=${STRFTIME(${EPOCH},,%d%m%Y-%H:%M:%S)})
exten => 2,n,System(/var/lib/asterisk/agi-bin/venv/bin/python3 /var/lib/asterisk/agi-bin/survey.py ${DATETIME} ${CDR(src)} ${MEMBER} ${CDR(opinion)} ${UNIQUEID} ${CALLFILE}.mp3)
exten => 2,n,Hangup()

exten => 3,1,Set(CDR(opinion)=3)
; exten => 3,n,Set(CDR(userfield)=${MEMBER})
; exten => 3,n,Set(DATETIME=${STRFTIME(${EPOCH},,%d%m%Y-%H:%M:%S)})
exten => 3,n,System(/var/lib/asterisk/agi-bin/venv/bin/python3 /var/lib/asterisk/agi-bin/survey.py ${DATETIME} ${CDR(src)} ${MEMBER} ${CDR(opinion)} ${UNIQUEID} ${CALLFILE}.mp3)
exten => 3,n,Hangup()

exten => 4,1,Set(CDR(opinion)=4)
; exten => 4,n,Set(CDR(userfield)=${MEMBER})
; exten => 4,n,Set(DATETIME=${STRFTIME(${EPOCH},,%d%m%Y-%H:%M:%S)})
exten => 4,n,System(/var/lib/asterisk/agi-bin/venv/bin/python3 /var/lib/asterisk/agi-bin/survey.py ${DATETIME} ${CDR(src)} ${MEMBER} ${CDR(opinion)} ${UNIQUEID} ${CALLFILE}.mp3)
exten => 4,n,Hangup()

exten => 5,1,Set(CDR(opinion)=5)
; exten => 5,n,Set(CDR(userfield)=${MEMBER})
; exten => 5,n,Set(DATETIME=${STRFTIME(${EPOCH},,%d%m%Y-%H:%M:%S)})
exten => 5,n,System(/var/lib/asterisk/agi-bin/venv/bin/python3 /var/lib/asterisk/agi-bin/survey.py ${DATETIME} ${CDR(src)} ${MEMBER} ${CDR(opinion)} ${UNIQUEID} ${CALLFILE}.mp3)
exten => 5,n,Hangup()


exten => h,1,NoOp(h context in queue_05)
exten => h,n,Hangup()




[closed]
exten => _X.,1,Hangup()


[local-out2]
exten => _XXXX,1,GoSub(sub-monitor,s,1(${EXTEN}))
exten => _XXXX,2,Dial(PJSIP/${EXTEN})

exten => _XXXXXXXXX,1,GoSub(sub-monitor,s,1(${EXTEN}))
exten => _XXXXXXXXX,2,Dial(PJSIP/${EXTEN}@712031222)

[local-out3]
exten => _XXXX,1,GoSub(sub-monitor,s,1(${EXTEN}))
exten => _XXXX,2,Dial(PJSIP/${EXTEN})

exten => _XXXXXXXXX,1,GoSub(sub-monitor,s,1(${EXTEN}))
exten => _XXXXXXXXX,2,Dial(PJSIP/${EXTEN}@712035555)

;;;;;;;<<512>>;;;;;
exten => *400,1,PauseQueueMember(queue_03,PJSIP/${CALLERID(num)})
same => n,Playback(beeperr)
same => n,Hangup

exten => *401,1,UnpauseQueueMember(queue_03,PJSIP/${CALLERID(num)})
same => n,AddQueueMember(queue_03,PJSIP/${CALLERID(num)})
same => n,Playback(beep)
same => n,Hangup

exten => *402,1,AddQueueMember(queue_03,PJSIP/${CALLERID(num)})
same => n,Playback(beep)
same => n,Hangup

exten => *403,1,RemoveQueueMember(queue_03,PJSIP/${CALLERID(num)})
same => n,Playback(beep)
same => n,Hangup

exten => *43,1,GoSub(app-echo-test,s,1)


[local-out-1218]
exten => 5555,1,Answer(500)
same => n,GoSub(all-in,_X.,1(${EXTEN}))
same => n,GotoIfTime(${WORKTIME},*,*,*?test-lng,s,1)
same => n,GoTo(go-sleep,_X.,1(${EXTEN}))

exten => _XXXX,1,GoSub(sub-monitor,s,1(${EXTEN}))
exten => _XXXX,2,Dial(PJSIP/${EXTEN})

exten => _XXXXXXXXX,1,GoSub(sub-monitor,s,1(${EXTEN}))
exten => _XXXXXXXXX,2,Dial(PJSIP/${EXTEN}@712031218)


[sub-monitor]
exten => s,1,Set(CALLFILE=/var/spool/asterisk/monitor/${STRFTIME(${EPOCH},,%Y)}/${STRFTIME(${EPOCH},,%m)}/${STRFTIME(${EPOCH},,%d)}/${STRFTIME(${EPOCH},,%d-%m-%Y_%H:%M)}-${CALLERID(number)}-${UNIQUEID})
exten => s,n,Set(convert_to_mp3=nice -n 19 /usr/bin/lame -b 64 --silent "${CALLFILE}.wav" "${CALLFILE}.mp3" && rm -f "${CALLFILE}.wav" && chmod 777 "${CALLFILE}.mp3")
exten => s,n,Set(CDR(record)=${CALLFILE}.mp3)
exten => s,n,Set(CDR(dnid)=${MEMBER})
exten => s,n,Set(CDR(cnum)=${CALLERID(num)})
exten => s,n,Set(CDR(cnam)=PJSIP/${CALLERID(num)})
exten => s,n,Set(CDR(hangup_cause)=${HANGUPCAUSE})
exten => s,n,Set(CDR(dst_cnam)=${CDR(dstchannel)})
exten => s,n,MixMonitor(${CALLFILE}.wav,b,${convert_to_mp3})
exten => s,n,return

[variables]
exten => s,1,Set(MEMBER=${MEMBERNAME:-4})
exten => s,n,Set(CDR(recordingfile)=in-${STRFTIME(${EPOCH},,%d-%m-%Y_%H:%M)}-${CALLERID(number)}-${UNIQUEID}.mp3)
exten => s,n,Set(CDR(did)=${CALLERID(dnid)})
exten => s,n,Set(CDR(userfield)=${MEMBER})
exten => s,n,return

[app-echo-test]
exten => s,1,Answer(500)
same => n,Wait(2)
same => n,Playback(demo-echotest)
same => n,Playback(beep)
same => n,Wait(2)
same => n,Echo()
same => n,Playback(demo-echodone)
same => n,Hangup

[vars]
exten => s,1,Noop(ACCOUNTCODE=${ACCOUNTCODE})
exten => s,2,Noop(ANSWEREDTIME=${ANSWEREDTIME})
exten => s,3,Noop(BLINDTRANSFER=${BLINDTRANSFER})
exten => s,4,Noop(CALLERID=${CALLERID(all)})
exten => s,5,Noop(CALLERID(name)=${CALLERID(name)})
exten => s,6,Noop(CALLERID(number)=${CALLERID(number)})
exten => s,7,Noop(CALLINGPRES=${CALLINGPRES})
exten => s,8,Noop(CHANNEL=${CHANNEL})
exten => s,9,Noop(CONTEXT=${CONTEXT})
exten => s,10,Noop(DATETIME=${STRFTIME(${EPOCH},,%d%m%Y-%H:%M:%S)})
exten => s,11,Noop(DIALEDPEERNAME=${DIALEDPEERNAME})
exten => s,12,Noop(DIALEDPEERNUMBER=${DIALEDPEERNUMBER})
exten => s,13,Noop(DIALEDTIME=${DIALEDTIME})
exten => s,14,Noop(DIALSTATUS=${DIALSTATUS})
exten => s,15,Noop(DNID=${CALLERID(dnid)})
exten => s,16,Noop(EPOCH=${EPOCH})
exten => s,17,Noop(EXTEN=${EXTEN})
exten => s,18,Noop(HANGUPCAUSE=${HANGUPCAUSE})
exten => s,19,Noop(INVALID_EXTEN=${INVALID_EXTEN})
exten => s,20,Noop(LANGUAGE=${LANGUAGE()})
exten => s,21,Noop(MEETMESECS=${MEETMESECS})
exten => s,22,Noop(PRIORITY=${PRIORITY})
exten => s,23,Noop(RDNIS=${CALLERID(rdnis)}})
exten => s,24,Noop(SIPDOMAIN=${SIPDOMAIN})
exten => s,25,Noop(SIP_CODEC=${SIP_CODEC})
exten => s,26,Noop(SIPCALLID=${SIPCALLID})
exten => s,27,Noop(SIPUSERAGENT=${SIPUSERAGENT})
exten => s,29,Noop(TXTCIDNAME=${TXTCIDNAME})
exten => s,30,Noop(UNIQUEID=${UNIQUEID})
exten => s,31,Noop(TOUCH_MONITOR=${TOUCH_MONITOR})
exten => s,32,Noop(MACRO_CONTEXT=${MACRO_CONTEXT})
exten => s,33,Noop(MACRO_EXTEN=${MACRO_EXTEN})
exten => s,34,Noop(MACRO_PRIORITY=${MACRO_PRIORITY})

[hangup]
exten => s,1,Hangup()
