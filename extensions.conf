[tash-in]
exten => _X.,1,Answer(500)
same => n,GoSub(all-in,_X.,1(${EXTEN}))
same => n,GotoIfTime(${WORKTIME},*,*,*?queue01,s,1)
same => n,GoSub(go-sleep,_X.,1(${EXTEN}))

[sam-in]
exten => _X.,1,Answer(500)
same => n,GoSub(all-in,_X.,1(${EXTEN}))
same => n,GotoIfTime(${WORKTIME},*,*,*?queue01,s,1)
same => n,GoSub(go-sleep,_X.,1(${EXTEN}))

[5555-in]
exten => _XXXXXXXXX,1,Answer(500)
exten => _XXXXXXXXX,n,GoSub(all-in,_X.,1(${EXTEN}))
exten => _XXXXXXXXX,n,Background(ru/welcome)
exten => _XXXXXXXXX,n,Playback(ru/welcome4)
exten => _XXXXXXXXX,n,Playback(ru/welcome3)
exten => _XXXXXXXXX,n,WaitExten(7)

exten => 2,1,GotoIfTime(${WORKTIME},*,*,*?queue03,s,1)

exten => 1,1,GotoIfTime(${WORKTIME},*,*,*?queue01,s,1)

exten => black,1,Hangup()

exten => night,1,Playback(ru/night_ru)
exten => s,n,Playback(ru/night_uz)
exten => s,n,Hangup()

exten => t,1,GotoIfTime(${WORKTIME},*,*,*?queue01,s,1)
exten => i,1,GotoIfTime(${WORKTIME},*,*,*?queue01,s,1)

[all-in]
exten => _X.,1,GotoIf($[${BLACKLIST()}]?black,1)
same => n,GoSub(macro-sub-monitor,s,1(${EXTEN}))
same => n,Set(CALLERID(name)=${CITY} ${CALLERID(name)})
same => n,Set(__CITYGLOB=${CITY})
same => n,Set(__CALLERIDGLOB=${CALLERID(num)})
same => n,Set(__WORKTIME=${WORK})
same => n,Set(__Direction=INBOUND)
same => n,return


[go-sleep]
exten => _X.,1,Playback(/var/lib/asterisk/sounds/uz1)
same => n,Playback(/var/lib/asterisk/sounds/ru1)
same => n,Hangup()


[test-in]
;exten => _X.,1,Answer(500)
;same => n,GoSub(all-in,_X.,1(${EXTEN}))
;same => n,GoSub(data-extract,s,1)
;same => n,GotoIfTime(${WORKTIME},*,*,*?test-lng,s,1)
;same => n,GoTo(go-sleep,_X.,1(${EXTEN}))
exten => _X.,1,DIal(PJSIP/1333)
;exten => black,1,Hangup()

exten => 5555,1,Answer(500)
same => n,GoSub(all-in,_X.,1(${EXTEN}))
same => n,GoSub(data-extract,s,1)
same => n,GotoIfTime(${WORKTIME},*,*,*?test-lng,s,1)
same => n,GoTo(go-sleep,_X.,1(${EXTEN}))

[data-extract]
exten => s,1,SET(JSON_RESULT_ORDERS=${SHELL(/usr/bin/bash /var/lib/asterisk/agi-bin/data_extract.sh ${CALLERIDGLOB})})
same => n,Set(__OrderID=${JSON_DECODE(JSON_RESULT_ORDERS,uniqueID)})
same => n,Set(__PaymentStatus=${JSON_DECODE(JSON_RESULT_ORDERS,lastPaymentStatusId)})
same => n,Set(__DeliveryStatus=${JSON_DECODE(JSON_RESULT_ORDERS,lastStatusId)})
same => n,return

[test-lng]
exten => s,1,Background(evos/uz/welcome_start&evos/ru/welcome_start&evos/select_uz_press_1&evos/select_ru_press_2,m)
exten => s,n,WaitExten(5)

exten => 1,1,Set(__LNG=uz)
same => n,Set(CHANNEL(language)=uz)
same => n,GoSub(test-input,s,1)

exten => 2,1,Set(__LNG=ru)
same => n,Set(CHANNEL(language)=ru1)
same => n,GoSub(test-input,s,1)

[test-input]

exten => s,1,Background(evos/${LNG}/create_order_press_1)
exten => s,n,Background(evos/${LNG}/check_status_press_2)
exten => s,n,Background(evos/${LNG}/problems_in_order_press_3)
exten => s,n,WaitExten(5)

exten => 2,1,Background(evos/${LNG}/you_order)
exten => 2,n,NoOP(${OrderID})
exten => 2,n,SayDigits(${OrderID})
exten => 2,n,GotoIF($[${DeliveryStatus} = 10]?999,1)
exten => 2,n,GotoIF($[${DeliveryStatus} = 5]?1000,1)
exten => 2,n,GotoIF($[${DeliveryStatus} = 8]?1001,1)
exten => 2,n,GotoIF($[${DeliveryStatus} = 3]?1002,1)
exten => 2,n,GotoIF($[${DeliveryStatus} = 4]?1002,1)
exten => 2,n,GotoIF($[${DeliveryStatus} = 1]?1003,1)


exten => 999,1,Background(evos/${LNG}/no_payment)
exten => 999,n,Background(evos/${LNG}/questions_press_1)

exten => 1000,1,Background(evos/${LNG}/delivery_complited)
exten => 1000,n,Background(evos/${LNG}/questions_press_1)

exten => 1001,1,Background(evos/${LNG}/in_delivery)
exten => 1001,n,Background(evos/${LNG}/questions_press_1)

exten => 1002,1,Background(evos/${LNG}/cooking)
exten => 1002,n,Background(evos/${LNG}/questions_press_1)

exten => 1003,1,Background(evos/${LNG}/order_start)
exten => 1003,n,Background(evos/${LNG}/questions_press_1)


exten => t,1,GotoIfTime(${WORKTIME},*,*,*?queue01,s,1)
exten => i,1,GotoIfTime(${WORKTIME},*,*,*?queue01,s,1)
exten => 3,1,GotoIfTime(${WORKTIME},*,*,*?queue03,s,1)
exten => 1,1,GotoIfTime(${WORKTIME},*,*,*?queue01,s,1)


[night]
exten => _X.,1,Playback(ru/night_ru)
exten => _X.,n,Playback(ru/night_uz)
exten => _X.,n,Hangup()

[local-out]
exten => _XXXX,1,GoSub(sub-monitor,s,1(${EXTEN}))
exten => _XXXX,2,Dial(PJSIP/${EXTEN})
exten => _XXXXXXXXX,1,GoSub(sub-monitor,s,1(${EXTEN}))
exten => _XXXXXXXXX,2,Dial(PJSIP/${EXTEN}@712031212,,R)
same => n,Set(Direction=INBOUND)


exten => *300,1,PauseQueueMember(queue_01,PJSIP/${CALLERID(num)})
same => n,Playback(beeperr)
same => n,Hangup

exten => *301,1,UnpauseQueueMember(queue_01,PJSIP/${CALLERID(num)})
same => n,AddQueueMember(queue_01,PJSIP/${CALLERID(num)})
same => n,Playback(beep)
same => n,Hangup

exten => *302,1,AddQueueMember(queue_01,PJSIP/${CALLERID(num)})
same => n,Playback(beep)
same => n,Hangup

exten => *303,1,RemoveQueueMember(queue_01,PJSIP/${CALLERID(num)})
same => n,Playback(beep)
same => n,Hangup

; exten => *304,1,PauseQueueMember(queue_01,PJSIP/${CALLERID(num)})
; same => n,Playback(beeperr)
; same => n,Hangup

; exten => *305,1,UnpauseQueueMember(queue_01,PJSIP/${CALLERID(num)})
; same => n,AddQueueMember(queue_01,PJSIP/${CALLERID(num)})
; same => n,Playback(beep)
; same => n,Hangup


[ADD_HEADER]
exten => s,1,Set(PJSIP_HEADER(add,X-Linkedid)=${CDR(linkedid)})
exten => s,n,Set(PJSIP_HEADER(add,X-UserId)=${UserId})
exten => s,n,Set(PJSIP_HEADER(add,X-City)=${CITYGLOB})
exten => s,n,Set(UserId=${PJSIP_HEADER(UserId)})
exten => s,n,Return()

[survey]
exten => s,1,Background(uzocenite&ruocenite)
same => n,WaitExten(5)
same => n,Set(Filename=/var/spool/asterisk/monitor/${UNIQUEID}.wav)
same => n,Hangup

exten => 1,1,Set(CDR(opinion)=1)
;exten => 1,n,Set(CDR(userfield)=${MEMBER})
exten => 1,n,System(/var/lib/asterisk/agi-bin/venv/bin/python3 /var/lib/asterisk/agi-bin/survey.py ${CDR(src)} ${MEMBER} ${queuename} 1 ${CDR(linkedid)} ${WAV}.wav)
exten => 1,n,return

exten => 2,1,Set(CDR(opinion)=2)
;exten => 2,n,Set(CDR(userfield)=${MEMBER})
exten => 2,n,System(/var/lib/asterisk/agi-bin/venv/bin/python3 /var/lib/asterisk/agi-bin/survey.py ${CDR(src)} ${MEMBER} ${queuename} 2 ${CDR(linkedid)} ${WAV}.wav)
exten => 2,n,return

exten => 3,1,Set(CDR(opinion)=3)
;exten => 3,n,Set(CDR(userfield)=${MEMBER})
exten => 3,n,System(/var/lib/asterisk/agi-bin/venv/bin/python3 /var/lib/asterisk/agi-bin/survey.py ${CDR(src)} ${MEMBER} ${queuename} 3 ${CDR(linkedid)} ${WAV}.wav)
exten => 3,n,return

exten => 4,1,Set(CDR(opinion)=4)
;exten => 4,n,Set(CDR(userfield)=${MEMBER})
exten => 4,n,System(/var/lib/asterisk/agi-bin/venv/bin/python3 /var/lib/asterisk/agi-bin/survey.py ${CDR(src)} ${MEMBER} ${queuename} 4 ${CDR(linkedid)} ${WAV}.wav)
exten => 4,n,return

exten => 5,1,Set(CDR(opinion)=5)
;exten => 5,n,Set(CDR(userfield)=${MEMBER})
exten => 5,n,System(/var/lib/asterisk/agi-bin/venv/bin/python3 /var/lib/asterisk/agi-bin/survey.py ${CDR(src)} ${MEMBER} ${queuename} 5 ${CDR(linkedid)} ${WAV}.wav)
exten => 5,n,return

exten => h,1,NoOp(h context in survey)
;exten => h,n,GoSub(convert-to-mp3,s,1(${EXTEN}))


[agent-answer-context]
exten => s,1,NoOp(Agent answered the call)
exten => s,n,Set(UserId=${SIP_HEADER(UserId)})
exten => s,n,Goto(ADD_HEADER)

same => n,Set(MESSAGE_DATA=${MESSAGE(UserId)})
same => n,NoOp(Received WebSocket data: ${MESSAGE_DATA})
same => n,Set(UserId=${CUT(UserId,|,1)})
same => n,NoOp(Extracted data: ${UserId})


[queue01]
exten => s,1,Set(QUEUE_PRIO=${PRIO})
same => n,Queue(queue_01,Rbc(ADD_HEADER^s^1))
same => n,Set(__MEMBER=${MEMBERNAME:-4})
same => n,NoOP(${UserId})
same => n,UserEvent(CustomEvent,UserId:${UserId},City:${X-City})
; same => n,Set(CDR(record)=in-${CALLERIDGLOB}_${MEMBER}_${CDR(linkedid)}.mp3)
; same => n,Set(CDR(userfield)=${MEMBER})
same => n,Set(__queuename=queue_01)
same => n,Goto(survey,s,1)
exten => h,1,NoOp(h context in queue_01)
;exten => h,n,GoSub(convert-to-mp3,s,1(${EXTEN}))
exten => h,n,Hangup()

[queue03]
exten => s,1,Set(QUEUE_PRIO=${PRIO})
same => n,Queue(queue_03,Rbc(ADD_HEADER^s^1))
same => n,Set(__MEMBER=${MEMBERNAME:-4})
same => n,Set(__queuename=queue_03)
same => n,GoSub(survey,s,1)
same => n,hangup()

;exten => s,n,Queue(queue_03,Rb(ADD_HEADER^s^1))
;exten => _[a-zA-Z],1,Set(QUEUE_PRIO=${PRIO})

exten => h,1,NoOp(h context in queue_03)
;exten => h,n,GoSub(convert-to-mp3,s,1(${EXTEN}))
exten => h,n,Hangup()

[queue05]
exten => _X.,1,Set(QUEUE_PRIO=${PRIO})
exten => _X.,n,Queue(queue_05,Rb(ADD_HEADER^s^1))

exten => _[a-zA-Z],1,Set(QUEUE_PRIO=${PRIO})
same => n,Queue(queue_05,Rbc(ADD_HEADER^s^1))
same => n,Set(queuename=queue_05)
same => n,Set(__MEMBER=${MEMBERNAME:-4})
same => n,Background(uzocenite&ruocenite)


exten => 1,1,Set(CDR(opinion)=1)
exten => 1,n,Set(CDR(userfield)=${MEMBER})
exten => 1,n,System(/var/lib/asterisk/agi-bin/venv/bin/python3 /var/lib/asterisk/agi-bin/survey.py ${CDR(src)} ${MEMBER} ${queuename} 5 ${CDR(linkedid)} ${WAV}.wav)
exten => 1,n,Hangup()

exten => 2,1,Set(CDR(opinion)=2)
exten => 2,n,Set(CDR(userfield)=${MEMBER})
exten => 2,n,System(/var/lib/asterisk/agi-bin/venv/bin/python3 /var/lib/asterisk/agi-bin/survey.py ${CDR(src)} ${MEMBER} ${queuename} 5 ${CDR(linkedid)} ${WAV}.wav)
exten => 2,n,Hangup()

exten => 3,1,Set(CDR(opinion)=3)
exten => 3,n,Set(CDR(userfield)=${MEMBER})
exten => 3,n,System(/var/lib/asterisk/agi-bin/venv/bin/python3 /var/lib/asterisk/agi-bin/survey.py ${CDR(src)} ${MEMBER} ${queuename} 5 ${CDR(linkedid)} ${WAV}.wav)
exten => 3,n,Hangup()

exten => 4,1,Set(CDR(opinion)=4)
exten => 4,n,Set(CDR(userfield)=${MEMBER})
exten => 4,n,System(/var/lib/asterisk/agi-bin/venv/bin/python3 /var/lib/asterisk/agi-bin/survey.py ${CDR(src)} ${MEMBER} ${queuename} 5 ${CDR(linkedid)} ${WAV}.wav)
exten => 4,n,Hangup()

exten => 5,1,Set(CDR(opinion)=5)
exten => 5,n,Set(CDR(userfield)=${MEMBER})
exten => 5,n,NoOp(${CDR(linkedid)})
exten => 5,n,System(/var/lib/asterisk/agi-bin/venv/bin/python3 /var/lib/asterisk/agi-bin/survey.py ${CDR(src)} ${MEMBER} ${queuename} 5 ${CDR(linkedid)} ${WAV}.wav)
exten => 5,n,Hangup()


exten => h,1,NoOp(h context in queue_05)
;exten => h,n,GoSub(convert-to-mp3,s,1(${EXTEN}))
exten => h,n,Hangup()




[closed]
exten => _X.,1,Hangup()


[local-out2]
exten => _XXXX,1,GoSub(sub-monitor,s,1(${EXTEN}))
exten => _XXXX,2,Dial(PJSIP/${EXTEN})

exten => _XXXXXXXXX,1,GoSub(sub-monitor,s,1(${EXTEN}))
exten => _XXXXXXXXX,2,Dial(PJSIP/${EXTEN}@712031222)

[local-out3]
exten => _XXXX,1,GoSub(sub-monitor,s,1(${EXTEN}))
exten => _XXXX,2,Dial(PJSIP/${EXTEN})

exten => _XXXXXXXXX,1,GoSub(sub-monitor,s,1(${EXTEN}))
exten => _XXXXXXXXX,2,Dial(PJSIP/${EXTEN}@712035555)

;;;;;;;<<512>>;;;;;
exten => *400,1,PauseQueueMember(queue_03,PJSIP/${CALLERID(num)})
same => n,Playback(beeperr)
same => n,Hangup

exten => *401,1,UnpauseQueueMember(queue_03,PJSIP/${CALLERID(num)})
;same => n,AddQueueMember(queue_03,PJSIP/${CALLERID(num)})
same => n,Playback(beep)
same => n,Hangup

exten => *402,1,AddQueueMember(queue_03,PJSIP/${CALLERID(num)})
same => n,Playback(beep)
same => n,Hangup

exten => *403,1,RemoveQueueMember(queue_03,PJSIP/${CALLERID(num)})
same => n,Playback(beep)
same => n,Hangup

exten => *43,1,GoSub(app-echo-test,s,1)


[local-out-1218]
exten => 5555,1,Answer(500)
same => n,GoSub(all-in,_X.,1(${EXTEN}))
same => n,GoSub(data-extract,s,1)
same => n,GotoIfTime(${WORKTIME},*,*,*?test-lng,s,1)
same => n,GoTo(go-sleep,_X.,1(${EXTEN}))

exten => _XXXX,1,GoSub(sub-monitor,s,1(${EXTEN}))
exten => _XXXX,2,Dial(PJSIP/${EXTEN})

exten => _XXXXXXXXX,1,GoSub(sub-monitor,s,1(${EXTEN}))
exten => _XXXXXXXXX,2,Dial(PJSIP/${EXTEN}@712031218)


[sub-monitor]
exten => s,1,Set(WAV=/var/spool/asterisk/monitor/${UNIQUEID})
exten => s,n,Set(MP3=/var/spool/asterisk/mp3/out-${CALLERID(num)}_${CALLERID(dnid)}_${CDR(linkedid)})
;exten => s,n,Set(monopt=nice -n 19 /usr/bin/lame -b 64 --silent "${WAV}.wav" "${MP3}.mp3" && rm -f "${WAV}.wav" && chmod 777 "${MP3}.mp3")
exten => s,n,Set(monopt=nice -n 19 /usr/bin/lame -b 64 --silent "${WAV}.wav" "${MP3}.mp3" && chmod 777 "${MP3}.mp3")
exten => s,n,Set(CDR(record)=out-${CALLERID(num)}_${CALLERID(dnid)}_${CDR(linkedid)}.mp3)
exten => s,n,Set(CDR(userfield)=${CALLERID(dnid)})
exten => s,n,MixMonitor(${WAV}.wav,b,${monopt})
exten => s,n,return

[macro-sub-monitor]
exten => s,1,Set(WAV=/var/spool/asterisk/monitor/${CALLERID(num)}_${CALLERID(dnid)}_${CDR(linkedid)}_${UNIQUEID})
exten => s,n,MixMonitor(${WAV}.wav)
exten => s,n,return


[convert-to-mp3]
exten => s,1,Set(WAV=/var/spool/asterisk/monitor/${UNIQUEID})
exten => s,n,Set(MEMBER=${MEMBERNAME:-4})
exten => s,n,Set(MP3=/var/spool/asterisk/mp3/in-${CALLERIDGLOB}_${MEMBER}_${CDR(linkedid)})
;exten => s,n,System(nice -n 19 /usr/bin/lame -b 64 --silent "${WAV}.wav" "${MP3}.mp3" && rm -f "${WAV}.wav" && chmod 777 "${MP3}.mp3")
exten => s,n,System(nice -n 19 /usr/bin/lame -b 64 --silent "${WAV}.wav" "${MP3}.mp3" && chmod 777 "${MP3}.mp3")
;exten => s,n,Set(CDR(record)=in-${CALLERIDGLOB}_${MEMBER}_${CDR(linkedid)}.mp3)
;exten => s,n,Set(CDR(userfield)=${MEMBER})

[variables]
exten => s,1,Set(MEMBER=${MEMBERNAME:-4})
exten => s,n,Set(CDR(record)=in-${CALLERIDGLOB}_${MEMBER}_${CDR(linkedid)}.mp3)
exten => s,n,Set(CDR(userfield)=${MEMBER})
exten => s,n,return

[app-echo-test]
exten => s,1,Answer(500)
same => n,Wait(2)
; same => n,Playback(demo-echotest)
same => n,Playback(beep)
same => n,Wait(2)
same => n,Echo()
; same => n,Playback(demo-echodone)
same => n,Hangup